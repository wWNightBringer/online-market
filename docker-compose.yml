version: '3'
# This configuration is intended for development purpose, it's **your** responsibility to harden it for production
services:
  postgresql:
    image: postgres:latest
    container_name: postgres_db
    environment:
      POSTGRES_DB: onlinemarket
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      timeout: 5s
      retries: 3
  consul:
    image: docker.io/bitnami/consul:1.16.0
    # If you want to expose these ports outside your dev PC,
    # remove the "127.0.0.1:" prefix
    ports:
      - 8300:8300
      - 8500:8500
      - 8600:8600
    environment:
      - INIT_SLEEP_SECONDS=5
      - CONSUL_URL=consul
      - CONSUL_PORT=8500
    volumes:
      - ./central-server-config:/config
    command: consul agent -dev -ui -client 0.0.0.0 -log-level=INFO
  prometheus:
    image: prom/prometheus:v2.45.0
    volumes:
      - ./prometheus/:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      # If you want to expose these ports outside your dev PC,
      # remove the "127.0.0.1:" prefix
    ports:
      - 9090:9090
  grafana:
    image: grafana/grafana:10.0.2
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
      # If you want to expose these ports outside your dev PC,
      # remove the "127.0.0.1:" prefix
    ports:
      - 3000:3000
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  user:
    container_name: user
    build:
      context: ./user
      dockerfile: Dockerfile
    ports:
      - 9001:9001
    restart: always
    depends_on:
      - consul
      - postgresql
      - prometheus
      - kafka
  gateway:
    container_name: gateway-service
    build:
      context: ./gateway
      dockerfile: Dockerfile
    ports:
      - 9000:9000
    restart: always
    depends_on:
      - consul
      - postgresql
      - prometheus
      - kafka
  order:
    container_name: order-service
    build:
      context: ./order
      dockerfile: Dockerfile
    ports:
      - 9002:9002
    restart: always
    depends_on:
      - consul
      - postgresql
      - prometheus
      - kafka
  storage:
    container_name: storage-service
    build:
      context: ./storage
      dockerfile: Dockerfile
    ports:
      - 9003:9003
    restart: always
    depends_on:
      - consul
      - postgresql
      - prometheus
      - kafka
  configuration:
    container_name: configuration-service
    build:
      context: ./configuration
      dockerfile: Dockerfile
    ports:
      - 8081:8081
    restart: always
    depends_on:
      - consul
      - postgresql
      - prometheus
      - kafka

volumes:
  postgres_data:
    driver: local
networks:
  consul:
    driver: bridge
  service:
    driver: bridge
