plugins {
    id 'java'
    id "maven-publish"
    id "idea"
    id "eclipse"
    id "org.liquibase.gradle" version "2.2.0"
    id 'com.google.cloud.tools.jib' version "3.3.2"
    id "io.spring.nohttp" version "0.0.11"
    id 'com.github.andygoossens.gradle-modernizer-plugin' version "1.8.0"
    id 'com.gorylenko.gradle-git-properties' version "2.4.1"
    id 'org.springframework.boot' version '3.1.2'
    id 'org.sonarqube' version "4.2.1.3168"
    id 'io.spring.dependency-management' version '1.1.2'
}

apply from: "../gradle/liquibase.gradle"
apply from: "../gradle/cache.gradle"

apply from: "../gradle/docker.gradle"
apply from: "../gradle/zipkin.gradle"

group = 'com.app.market'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = 17
targetCompatibility = 17

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

nohttp {
    source.include "build.gradle", "README.md"
}

defaultTasks "bootRun"

springBoot {
    mainClass = "com.app.configuration.ConfigurationApplication"
}

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom "tech.jhipster:jhipster-dependencies:8.0.0-beta.2"
    }
}

ext {
    set('springCloudVersion', "2022.0.4")
}

dependencies {
    if (!project.hasProperty("gae")) {
        implementation platform("tech.jhipster:jhipster-dependencies:8.0.0-beta.2")
    }

    // Use ", version: jhipsterDependenciesVersion, changing: true" if you want
    // to use a SNAPSHOT release instead of a stable release
    implementation "tech.jhipster:jhipster-framework"
    implementation group: 'com.h2database', name: 'h2', version: '2.2.220'
    implementation "com.fasterxml.jackson.module:jackson-module-jaxb-annotations"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-hibernate6"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-hppc"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
    testImplementation "org.testcontainers:junit-jupiter"
    testImplementation "org.testcontainers:testcontainers"
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-api:2.2.0"
    implementation "com.zaxxer:HikariCP"
    implementation "org.apache.commons:commons-lang3"
    annotationProcessor "org.hibernate.orm:hibernate-jpamodelgen:6.1.7.Final"
    implementation "org.hibernate.orm:hibernate-core"
    implementation "org.hibernate.validator:hibernate-validator"
    implementation "org.mapstruct:mapstruct:1.5.5.Final"
    annotationProcessor "org.mapstruct:mapstruct-processor:1.5.5.Final"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    implementation "org.springframework.boot:spring-boot-loader-tools"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    testImplementation "org.testcontainers:jdbc"
    implementation "org.springframework.boot:spring-boot-starter-logging"
    implementation "org.springframework.boot:spring-boot-starter-mail"
    implementation "org.springframework.boot:spring-boot-starter-thymeleaf"
    implementation "org.springframework.boot:spring-boot-starter-web"
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.springframework.boot:spring-boot-test"
    testImplementation("com.tngtech.archunit:archunit-junit5-api:1.0.1") {
        exclude group: "org.slf4j", module: "slf4j-api"
    }
    testRuntimeOnly("com.tngtech.archunit:archunit-junit5-engine:1.0.1") {
        exclude group: "org.slf4j", module: "slf4j-api"
    }
    implementation "org.springframework.boot:spring-boot-starter-undertow"
    implementation "org.springframework.cloud:spring-cloud-starter"
    implementation "org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j"
    implementation "org.springframework.retry:spring-retry"
    implementation "org.springframework.cloud:spring-cloud-starter-openfeign"
    implementation "org.springframework.cloud:spring-cloud-starter-bootstrap"
    implementation "org.springframework.cloud:spring-cloud-starter-consul-discovery"
    implementation "org.springframework.cloud:spring-cloud-starter-consul-config"
    implementation "io.micrometer:micrometer-registry-prometheus"
    implementation "io.dropwizard.metrics:metrics-core"
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.6.0'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

checkstyle {
    ignoreFailures = true
    toolVersion "10.12.1"
    configFile = file("../config/checkstyle.xml")
    checkstyleTest.enabled = false
}

tasks.named('test') {
    useJUnitPlatform()
}
